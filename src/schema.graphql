type Character {
    name: String
    haircolour: CharacterHaircolour
    eyecolour: CharacterEyecolour
    class: CharacterClass
}

enum CharacterHaircolour {
    BLUE
    PINK
    GREEN
}

enum CharacterEyecolour {
    BLUE
    PINK
    GREEN
}

enum CharacterClass {
    NECROMANCER
    SORCERESS
    ASSASSIN
    BERSERKER
}

type DeletedResourceResponse {
	deletedCharacter: String
	success: Boolean
}

type Query {
    getCharacterByName(name: String!): Character
    getAllCharacters: [Character]
}

type Mutation {
    createCharacter(name: String!,haircolour: CharacterHaircolour, eyecolour: CharacterEyecolour, class: CharacterClass): Character
    updateCharacter(name: String!,haircolour: CharacterHaircolour!, eyecolour: CharacterEyecolour!, class: CharacterClass!): Character
    delteCharacter(name: String!): DeletedResourceResponse
}